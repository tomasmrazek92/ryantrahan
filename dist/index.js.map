{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/index.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "// Footer Dragging\ninteract('[data-draggable]').draggable({\n  inertia: true,\n  modifiers: [\n    interact.modifiers.restrictRect({\n      restriction: '.footer-wrap',\n      endOnly: true,\n    }),\n  ],\n  listeners: {\n    move: dragMoveListener,\n  },\n});\n\nfunction dragMoveListener(event) {\n  var { target } = event;\n  var x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx;\n  var y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy;\n\n  // Retrieve the current rotation or initialize it to 0\n  var currentRotation = parseFloat(target.getAttribute('data-rotation')) || 0;\n\n  // Calculate additional rotation based on X-axis movement\n  var maxRotation = 15; // Maximum rotation in degrees\n  var additionalRotation = event.dx / 10; // Adjust divisor to control sensitivity\n\n  // Calculate the new rotation and clamp it to the range [-maxRotation, maxRotation]\n  var newRotation = currentRotation + additionalRotation;\n  newRotation = Math.max(-maxRotation, Math.min(maxRotation, newRotation));\n\n  // Apply translation and rotation\n  target.style.transform = 'translate(' + x + 'px, ' + y + 'px) rotate(' + newRotation + 'deg)';\n\n  // Update position and rotation attributes\n  target.setAttribute('data-x', x);\n  target.setAttribute('data-y', y);\n  target.setAttribute('data-rotation', newRotation); // Store the new rotation\n}\n\n// This function is used later in the resizing and gesture demos\nwindow.dragMoveListener = dragMoveListener;\n\n// Footer Parallax\n$('.button.is-footer')\n  .add('.footer_socila-link')\n  .each(function () {\n    let tag = $(this);\n    let tl = gsap.timeline({\n      scrollTrigger: {\n        trigger: '.footer-wrap-inner',\n        start: 'top bottom',\n        end: 'bottom bottom',\n        scrub: 1,\n        markers: true,\n      },\n    });\n\n    tl.from(tag, { rotate: 0, y: `${gsap.utils.random(2, 5)}rem`, ease: 'power1.in' });\n  });\n"],
  "mappings": ";;;AAAA,MAAI,YAAY,GAAG,iCAAsB,EAAE,iBAAiB,UAAU,MAAM,SAAS,OAAO,CAAC;;;ACC7F,WAAS,kBAAkB,EAAE,UAAU;AAAA,IACrC,SAAS;AAAA,IACT,WAAW;AAAA,MACT,SAAS,UAAU,aAAa;AAAA,QAC9B,aAAa;AAAA,QACb,SAAS;AAAA,MACX,CAAC;AAAA,IACH;AAAA,IACA,WAAW;AAAA,MACT,MAAM;AAAA,IACR;AAAA,EACF,CAAC;AAED,WAAS,iBAAiB,OAAO;AAC/B,QAAI,EAAE,OAAO,IAAI;AACjB,QAAI,KAAK,WAAW,OAAO,aAAa,QAAQ,CAAC,KAAK,KAAK,MAAM;AACjE,QAAI,KAAK,WAAW,OAAO,aAAa,QAAQ,CAAC,KAAK,KAAK,MAAM;AAGjE,QAAI,kBAAkB,WAAW,OAAO,aAAa,eAAe,CAAC,KAAK;AAG1E,QAAI,cAAc;AAClB,QAAI,qBAAqB,MAAM,KAAK;AAGpC,QAAI,cAAc,kBAAkB;AACpC,kBAAc,KAAK,IAAI,CAAC,aAAa,KAAK,IAAI,aAAa,WAAW,CAAC;AAGvE,WAAO,MAAM,YAAY,eAAe,IAAI,SAAS,IAAI,gBAAgB,cAAc;AAGvF,WAAO,aAAa,UAAU,CAAC;AAC/B,WAAO,aAAa,UAAU,CAAC;AAC/B,WAAO,aAAa,iBAAiB,WAAW;AAAA,EAClD;AAGA,SAAO,mBAAmB;AAG1B,IAAE,mBAAmB,EAClB,IAAI,qBAAqB,EACzB,KAAK,WAAY;AAChB,QAAI,MAAM,EAAE,IAAI;AAChB,QAAI,KAAK,KAAK,SAAS;AAAA,MACrB,eAAe;AAAA,QACb,SAAS;AAAA,QACT,OAAO;AAAA,QACP,KAAK;AAAA,QACL,OAAO;AAAA,QACP,SAAS;AAAA,MACX;AAAA,IACF,CAAC;AAED,OAAG,KAAK,KAAK,EAAE,QAAQ,GAAG,GAAG,GAAG,KAAK,MAAM,OAAO,GAAG,CAAC,QAAQ,MAAM,YAAY,CAAC;AAAA,EACnF,CAAC;",
  "names": []
}
